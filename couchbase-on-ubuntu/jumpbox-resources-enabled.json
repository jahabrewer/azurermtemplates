{
    "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "targetRegion": {
            "type": "string",
            "defaultValue": "West US",
            "metadata": {
                "Description": "Location where resources will be provisioned"
            }
        },
        "virtualNetworkName": {
            "type": "string",
            "defaultValue": "myVNET",
            "metadata": {
                "Description": "The arbitrary name of the virtual network provisioned for the cluster"
            }
        },
        "subnetName": {
            "type": "string",
            "defaultValue": "Subnet-1",
            "metadata": {
                "Description": "Subnet name for the virtual network that resources will be provisioned in to"
            }
        },
        "storageAccountNamePrefix": {
            "type": "string",
            "defaultValue": "uniquestorageAccountNamePrefix",
            "metadata": {
                "Description": "Unique namespace for the Storage Account where the Virtual Machine's disks will be placed"
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "Description": "Administrator user name used when provisioning virtual machines"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "Description": "Administrator password used when provisioning virtual machines"
            }
        },
        "vmNamePrefix": {
            "type": "string",
            "metadata": {
                "Description": "The global VM name prefix."
            }
        }
    },
    "variables": {
        "vmStorageAccountContainerName": "vhd",
        "vmSourceImageName": "b39f27a8b8c64d52b05eac6a62ebad85__Ubuntu-14_04_2_LTS-amd64-server-20150309-en-us-30GB",
        "sourceImageName": "[concat('/',subscription().subscriptionId,'/services/images/',variables('vmSourceImageName'))]",
        "winSourceImageName": "[concat('/',subscription().subscriptionId,'/services/images/a699494373c04fc0bc8f2bb1389d6106__Windows-Server-Technical-Preview-201504.01-en.us-127GB.vhd')]",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]",
        "subnetRef": "[concat(variables('vnetID'),'/subnets/',parameters('subnetName'))]",
        "storageAccountName": "[concat(parameters('storageAccountNamePrefix'), 'jb')]"
    },
    "resources": [{
        "type": "Microsoft.Storage/storageAccounts",
        "name": "[variables('storageAccountName')]",
        "apiVersion": "2014-12-01-preview",
        "location": "[parameters('targetregion')]",
        "properties": {
            "accountType": "Standard_LRS"
        }
    }, {
        "apiVersion": "2014-12-01-preview",
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "publicIP",
        "location": "[parameters('targetRegion')]",
        "properties": {
            "publicIPAllocationMethod": "Dynamic"
        }
    }, {
        "apiVersion": "2014-12-01-preview",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "nicJumpbox",
        "location": "[parameters('targetRegion')]",
        "dependsOn": [
            "[concat('Microsoft.Network/publicIPAddresses/', 'publicIP')]"
        ],
        "properties": {
            "ipConfigurations": [{
                "name": "ipconfig1",
                "properties": {
                    "privateIPAllocationMethod": "Dynamic",
                    "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses','publicIP')]"
                    },
                    "subnet": {
                        "id": "[variables('subnetRef')]"
                    }
                }
            }]
        }
    }, {
        "apiVersion": "2014-12-01-preview",
        "type": "Microsoft.Compute/virtualMachines",
        "name": "jumpbox",
        "location": "[parameters('targetRegion')]",
        "dependsOn": [
            "[concat('Microsoft.Network/networkInterfaces/', 'nicJumpbox')]",
            "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]"
        ],
        "properties": {
            "hardwareProfile": {
                "vmSize": "Standard_A0",
                "platformGuestAgent": "true"
            },
            "osProfile": {
                "computername": "[concat(parameters('vmNamePrefix'), 'jumpbox')]",
                "adminUsername": "[parameters('adminUsername')]",
                "adminPassword": "[parameters('adminPassword')]",
                "linuxOperatingSystemProfile": {
                    "disableSshPasswordAuthentication": "false"
                }
            },
            "storageProfile": {
                "sourceImage": {
                    "id": "[variables('sourceImageName')]"
                },
                "destinationVhdsContainer": "[concat('https://' ,variables('storageAccountName'), '.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/')]"
            },
            "networkProfile": {
                "networkInterfaces": [{
                    "id": "[resourceId('Microsoft.Network/networkInterfaces','nicJumpbox')]"
                }],
                "inputEndpoints": [{
                    "enableDirectServerReturn": "False",
                    "endpointName": "SSH",
                    "privatePort": 22,
                    "publicPort": 22,
                    "protocol": "tcp"
                }]
            }
        }
    },
    {
        "apiVersion": "2014-12-01-preview",
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "publicIPWin",
        "location": "[parameters('targetRegion')]",
        "properties": {
            "publicIPAllocationMethod": "Dynamic"
        }
    }, {
        "apiVersion": "2014-12-01-preview",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "nicWin",
        "location": "[parameters('targetRegion')]",
        "dependsOn": [
            "[concat('Microsoft.Network/publicIPAddresses/', 'publicIPWin')]"
        ],
        "properties": {
            "ipConfigurations": [{
                "name": "ipconfig1",
                "properties": {
                    "privateIPAllocationMethod": "Dynamic",
                    "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses','publicIPWin')]"
                    },
                    "subnet": {
                        "id": "[variables('subnetRef')]"
                    }
                }
            }]
        }
    }, {
        "apiVersion": "2014-12-01-preview",
        "type": "Microsoft.Compute/virtualMachines",
        "name": "windows",
        "location": "[parameters('targetRegion')]",
        "dependsOn": [
            "[concat('Microsoft.Network/networkInterfaces/', 'nicWin')]",
            "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]"
        ],
        "properties": {
            "hardwareProfile": {
                "vmSize": "Standard_A1",
                "platformGuestAgent": "true"
            },
            "osProfile": {
                "computername": "[concat(parameters('vmNamePrefix'), 'win')]",
                "adminUsername": "[parameters('adminUsername')]",
                "adminPassword": "[parameters('adminPassword')]",
                "linuxOperatingSystemProfile": {
                    "disableSshPasswordAuthentication": "false"
                }
            },
            "storageProfile": {
                "sourceImage": {
                    "id": "[variables('winSourceImageName')]"
                },
                "destinationVhdsContainer": "[concat('https://' ,variables('storageAccountName'), '.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/')]"
            },
            "networkProfile": {
                "networkInterfaces": [{
                    "id": "[resourceId('Microsoft.Network/networkInterfaces','nicWin')]"
                }],
                "inputEndpoints": [{
                    "enableDirectServerReturn": "False",
                    "endpointName": "RDP",
                    "privatePort": 3389,
                    "publicPort": 3389,
                    "protocol": "tcp"
                }]
            }
        }
    }],
    "outputs": {}
}